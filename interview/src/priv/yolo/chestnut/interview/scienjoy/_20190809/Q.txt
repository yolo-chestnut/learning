What is ClassLoader? How ClassLoader works In Java?（什么是类加载器？如何在Java中工作？）
    https://www.cnblogs.com/doit8791/p/5820037.html
    委托模型机制：类装载器有载入类的需求时，会先请示其Parent使用其搜索路径帮忙载入，如果Parent找不到，那么才由自己依照自己的搜索路径搜索类
为什么要使用这种双亲委托模式呢？
    因为这样可以避免重复加载，当父亲已经加载了该类的时候，就没有必要子ClassLoader再加载一次。
    考虑到安全因素，我们试想一下，如果不使用这种委托模式，那我们就可以随时使用自定义的String来动态替代java核心api中定义类型，这样会存在非常大的安全隐患，而双亲委托的方式，就可以避免这种情况，因为String已经在启动时被加载，所以用户自定义类是无法加载一个自定义的ClassLoader。
思考：假如我们自己写了一个java.lang.String的类，我们是否可以替换调JDK本身的类？
    答案是否定的。我们不能实现。为什么呢？我看很多网上解释是说双亲委托机制解决这个问题，其实不是非常的准确。因为双亲委托机制是可以打破的，你完全可以自己写一个classLoader来加载自己写的java.lang.String类，但是你会发现也不会加载成功，具体就是因为针对java.*开头的类，jvm的实现中已经保证了必须由bootstrp来加载。